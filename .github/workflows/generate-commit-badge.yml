name: Generate Commit Badges (multi-repo)

on:
  schedule:
    - cron: '15 3 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate_badge:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        repo:
          - Promptee
          - troubleshoot-ai-assist
          # add more repos here

    env:
      OWNER: attilagrynaeus
      BADGE_DIR: badges

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # calculate commits from target repo
      - name: Count commits
        id: commits
        shell: bash
        run: |
          set -euo pipefail
          REPO="${{ matrix.repo }}"
          git clone --filter=blob:none --quiet --mirror \
            "https://github.com/${OWNER}/${REPO}.git" tmp_repo
          COUNT=$(git --git-dir tmp_repo rev-list --all --count)
          rm -rf tmp_repo
          echo "commits=$COUNT" >> "$GITHUB_OUTPUT"


      # generate the badge
      - name: Generate Badge SVG
        uses: emibcn/badge-action@v1
        with:
          label: "${{ matrix.repo }} commits"
          status: "${{ steps.commits.outputs.commits }}"
          color: green
          path: "${{ env.BADGE_DIR }}/${{ matrix.repo }}_commits.svg"
          

      - name: Commit and Push Badge
        shell: bash
        run: |
          set -euo pipefail               # stop on any error
          mkdir -p "${BADGE_DIR}"

          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git fetch origin main
          git rebase origin/main

          BADGE_FILE="${BADGE_DIR}/${{ matrix.repo }}_commits.svg"
          git add "${BADGE_FILE}"

          # ──► commit only if there is an actual change
          if ! git diff --cached --quiet; then
            git commit -m "chore(badge): update ${{ matrix.repo }} badge → ${{ steps.commits.outputs.commits }} commits"
          else
            echo "No changes for ${{ matrix.repo }} – skipping push."
            exit 0
          fi

          # push with automatic rebase, max 3 attempts
          for attempt in 1 2 3; do
            echo "Push attempt $attempt…"
            if git push --force-with-lease; then
              echo "✔ Push succeeded."
              exit 0
            fi
            echo "❗ Remote ahead, rebasing…"
            git fetch origin main
            git rebase origin/main
            sleep 2
          done

          echo "::error::Failed to push badge after 3 attempts"
          exit 1
