name: Generate Commit Badges (multi-repo author-specific)

on:
  schedule:
    - cron: '15 3 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate_badge:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: [Promptee, troubleshoot-ai-assist] 

    env:
      OWNER: attilagrynaeus
      BADGE_DIR: badges
      AUTHOR_PATTERN: 'Attila Grynaeus\|attilagrynaeus\|damiancrowsnest\|unknown' 

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Count author commits from external repo
        id: author_commits
        shell: bash
        run: |
          set -euo pipefail
          REPO="${{ matrix.repo }}"
          git clone --quiet --filter=blob:none --mirror \
            "https://github.com/${OWNER}/${REPO}.git" tmp_repo
          COUNT=$(git --git-dir tmp_repo rev-list --count --all --author="${AUTHOR_PATTERN}")
          rm -rf tmp_repo
          echo "commits=$COUNT" >> "$GITHUB_OUTPUT"
          echo "Total commits by author in ${REPO}: $COUNT"

      # --- Badge ---
      - name: Generate badge SVG
        uses: emibcn/badge-action@v1
        with:
          label: "${{ matrix.repo }} commits"
          status: "${{ steps.author_commits.outputs.commits }}"
          color: green
          path: "${{ env.BADGE_DIR }}/${{ matrix.repo }}_commits.svg"

      # --- Commit and push badge ---
      - name: Commit and push badge
        shell: bash
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git fetch origin main
          git rebase origin/main

          FILE="${BADGE_DIR}/${{ matrix.repo }}_commits.svg"
          git add "$FILE"

          if git diff --cached --quiet; then
            echo "No changes for ${{ matrix.repo }} – skipping push."
            exit 0
          fi

          git commit -m "chore(badge): update ${{ matrix.repo }} → ${{ steps.author_commits.outputs.commits }} author commits"

          for i in 1 2 3; do
            git push --force-with-lease && exit 0
            echo "Push failed, rebasing (try $i)…"
            git fetch origin main
            git rebase origin/main
          done

          echo "::error::Failed to push badge after 3 attempts"
          exit 1
