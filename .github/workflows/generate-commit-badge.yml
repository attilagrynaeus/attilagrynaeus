name: Generate Total Commit Badge

on:
  schedule:
    - cron: '15 3 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate_total_commit_badge:
    runs-on: ubuntu-latest
    env:
      OWNER: attilagrynaeus
      BADGE_DIR: badges
      AUTHOR_PATTERN: 'Attila Grynaeus\|attilagrynaeus\|damiancrowsnest\|unknown'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Count total commits across all repos
        id: total_commits
        shell: bash
        run: |
          set -euo pipefail
          REPOS=("Promptee" "troubleshoot-ai-assist") # <-- Ide tedd az összes repót
          TOTAL=0
          for REPO in "${REPOS[@]}"; do
            git clone --quiet --filter=blob:none --mirror \
              "https://github.com/${OWNER}/${REPO}.git" tmp_repo
            COUNT=$(git --git-dir tmp_repo rev-list --count --all --author="${AUTHOR_PATTERN}")
            rm -rf tmp_repo
            echo "${REPO}: $COUNT commits"
            TOTAL=$((TOTAL + COUNT))
          done
          echo "Total commits across all repos: $TOTAL"
          echo "total_commits=$TOTAL" >> "$GITHUB_OUTPUT"

      # --- Badge ---
      - name: Generate total commits badge SVG
        uses: emibcn/badge-action@v1
        with:
          label: "Total Commits"
          status: "${{ steps.total_commits.outputs.total_commits }}"
          color: green
          path: "${{ env.BADGE_DIR }}/commits.svg"

      # --- Commit and push badge ---
      - name: Commit and push badge
        shell: bash
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git fetch origin main
          git rebase origin/main

          FILE="${BADGE_DIR}/commits.svg"
          git add "$FILE"

          if git diff --cached --quiet; then
            echo "No changes – skipping push."
            exit 0
          fi

          git commit -m "chore(badge): update total commits → ${{ steps.total_commits.outputs.total_commits }}"

          for i in 1 2 3; do
            git push --force-with-lease && exit 0
            echo "Push failed, rebasing (try $i)…"
            git fetch origin main
            git rebase origin/main
          done

          echo "::error::Failed to push badge after 3 attempts"
          exit 1
